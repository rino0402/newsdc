Option Explicit'-----------------------------------------------------------------------'メイン'-----------------------------------------------------------------------WScript.Quit Main()'-----------------------------------------------------------------------'使用方法'-----------------------------------------------------------------------Private Sub usage()	Wscript.Echo "clrxls.vbs [option] <*.xlsx>"	Wscript.Echo "Ex."	Wscript.Echo "cscript//nologo ctrxls.vbs \\w6\newsdc9\files\BoZaiko.xlsx"End Sub'-----------------------------------------------------------------------'Excel'2017.03.07 新規'-----------------------------------------------------------------------'---- CursorTypeEnum Values ----Const adOpenForwardOnly = 0Const adOpenKeyset = 1Const adOpenDynamic = 2Const adOpenStatic = 3'---- LockTypeEnum Values ----Const adLockReadOnly = 1Const adLockPessimistic = 2Const adLockOptimistic = 3Const adLockBatchOptimistic = 4'---- CursorLocationEnum Values ----Const adUseServer = 2Const adUseClient = 3'---- CommandTypeEnum Values ----Const adCmdUnspecified	= -1	' Unspecified type of command Const adCmdText			= 1		' Evaluates CommandText as a textual definition of a command or stored procedure call Const adCmdTable		= 2		' Evaluates CommandText as a table name whose columns are returned by an SQL query Const adCmdStoredProc	= 4		' Evaluates CommandText as a stored procedure name Const adCmdUnknown		= 8		' Default. Unknown type of command Const adCmdFile			= 256	' Evaluates CommandText as the file name of a persistently stored Recordset. Used with Recordset.Open or Requery only. Const adCmdTableDirect	= 512	' Evaluates CommandText as a table name whose columns are all returned. Used with Recordset.Open or Requery only. To use the Seek method, the Recordset must be opened with adCmdTableDirect. Cannot be combined with the ExecuteOptionEnum value adAsyncExecute.  Const xlUp = -4162Class Excel	Private	strFileName	Private	objExcel	Private	objBook	'-----------------------------------------------------------------------	'Class_Initialize	'-----------------------------------------------------------------------	Private Sub Class_Initialize		Debug ".Class_Initialize()"		set	objExcel = nothing		set	objBook = nothing	End Sub	'-----------------------------------------------------------------------	'Class_Terminate	'-----------------------------------------------------------------------    Private Sub Class_Terminate		Debug ".Class_Terminate()"		set	objBook = nothing		set	objExcel = nothing    End Sub	'-----------------------------------------------------------------------	'Run() 実行処理	'-----------------------------------------------------------------------    Public Function Run()		Debug ".Run()"		Call Load()	End Function	'-----------------------------------------------------------------------	'Load() 読込	'-----------------------------------------------------------------------	Private	strBookName    Public Function Load()		Debug ".Load():" & strFileName		Call CreateExcel()		Call OpenBook(strFileName)		Call Update()		Call CloseBook()	End Function	'-------------------------------------------------------------------	'Update	'-------------------------------------------------------------------    Private Function Update()		Debug ".Update()"		dim objSheet		for each objSheet in objBook.Worksheets			Debug ".Update():" & objSheet.Name			exit for		next'		Wscript.StdErr.WriteLine ".Update():更新中..." & objSheet.Name		Debug ".Update():optSetTS=" & optSetTS		if optSetTS <> "" then			objSheet.Range(optSetTS) = Now()			Wscript.StdErr.WriteLine objSheet.Name & ":" & objSheet.Range(optSetTS).Address & ":" & objSheet.Range(optSetTS)		end if'		objBook.RefreshAll		RefreshODBC		RefreshPivot		if optSetTS <> "" then			objSheet.Range(optSetTS) = Now()			Debug ".Update():" & optSetTS & "=" & objSheet.Range(optSetTS)		end if'		Wscript.StdErr.WriteLine ".Update():完了"    End Function	'-------------------------------------------------------------------	'Refresh PivotTables	'-------------------------------------------------------------------	Private Sub RefreshPivot()		Debug ".RefreshPivot()"		dim objSheet	'As Worksheet		for each objSheet in objBook.Worksheets		    Dim p 'As PivotTable		    For Each p In objSheet.PivotTables				Wscript.StdErr.Write "Pivot " & objSheet.Name & ":" & p.Name & ":"		        p.RefreshTable				Wscript.StdErr.WriteLine "ok"		    Next		next	End Sub	'-------------------------------------------------------------------	'Refresh ODBCConnection	'-------------------------------------------------------------------	Private Sub RefreshODBC()		Debug ".RefreshODBC()"	    Dim c	'As WorkbookConnection	    For Each c In objBook.Connections			Debug ".RefreshODBC()" & c.Name	'c.Type, c.ODBCConnection.BackgroundQuery			Debug ".RefreshODBC()" & c.ODBCConnection.CommandText			Debug ".RefreshODBC()" & c.ODBCConnection.Connection	        Dim tmp 'As Boolean	        tmp = c.ODBCConnection.BackgroundQuery	        c.ODBCConnection.BackgroundQuery = False			Wscript.StdErr.Write "ODBC " & c.Name & ":"	        c.ODBCConnection.Refresh			Wscript.StdErr.WriteLine "ok"	        c.ODBCConnection.BackgroundQuery = tmp	    Next	End Sub	'-------------------------------------------------------------------	'Excelの準備	'-------------------------------------------------------------------	Private Function CreateExcel()		Debug ".CreateExcel()"		if objExcel is nothing then			Debug ".CreateExcel():CreateObject(Excel.Application)"			Set objExcel = WScript.CreateObject("Excel.Application")		end if	end function	'-------------------------------------------------------------------	'AbsPath	'-------------------------------------------------------------------	Private	Function AbsPath(byVal strPath)		dim	objFso		Set objFso = CreateObject("Scripting.FileSystemObject")		AbsPath = objFso.GetAbsolutePathName(strPath)		Set objFso = Nothing	End Function	'-------------------------------------------------------------------	'Excel ファイルオープン	'-------------------------------------------------------------------	Private Function OpenBook(byVal strBkName)		Debug ".OpenBook()"		if objBook is nothing then			strBkName = AbsPath(strBkName)			Debug ".OpenBook().Open:" & strBkName			Set objBook = objExcel.Workbooks.Open(strBkName,False,False,,"")		end if	end function	'-------------------------------------------------------------------	'Excel ファイルクローズ	'-------------------------------------------------------------------	Private Function CloseBook()		Debug ".CloseBook()"		if not objBook is nothing then			Debug ".CloseBook().Close:" & objBook.Name			Call objBook.Close(True)			set objBook = nothing		end if	end function	'-----------------------------------------------------------------------	'デバッグ用 /debug	'-----------------------------------------------------------------------	Private Sub Debug(byVal strMsg)		if WScript.Arguments.Named.Exists("debug") then			Wscript.StdErr.WriteLine strMsg		end if	End Sub	'-----------------------------------------------------------------------	'メッセージ表示	'-----------------------------------------------------------------------	Public Sub Disp(byVal strMsg)		Wscript.Echo strMsg	End Sub	'-----------------------------------------------------------------------	'オプション取得	'-----------------------------------------------------------------------	Private Function GetOption(byval strName _					  ,byval strDefault _					  )		dim	strValue		if strName = "" then			strValue = ""			if strDefault < WScript.Arguments.UnNamed.Count then				strValue = WScript.Arguments.UnNamed(strDefault)			end if		else			strValue = strDefault			if WScript.Arguments.Named.Exists(strName) then				strValue = WScript.Arguments.Named(strName)			end if		end if		GetOption = strValue	End Function	'-----------------------------------------------------------------------	'Init() オプションチェック	'-----------------------------------------------------------------------	Private	optNew	Private	optSetTS    Public Function Init()		Debug ".Init()"		optSetTS="M1"		dim	strArg		Init = ""		For Each strArg In WScript.Arguments.UnNamed			if strFileName = "" then				strFileName = strArg			else				Init = "オプションエラー:" & strArg				Disp Init				Exit Function			end if		Next		if strFileName = "" then			Init = "ファイルを指定して下さい."			Disp Init			Exit Function		end if		For Each strArg In WScript.Arguments.Named	    	select case lcase(strArg)			case "db"			case "debug"			case "setts"				optSetTS = GetOption("SetTS","")			case else				Init = "オプションエラー:" & strArg				Disp Init				Exit Function			end select		Next	End FunctionEnd Class'-----------------------------------------------------------------------'メイン'-----------------------------------------------------------------------Private Function Main()	dim	objExcel	Set objExcel = New Excel	if objExcel.Init() <> "" then		call usage()		exit function	end if	call objExcel.Run()End Function